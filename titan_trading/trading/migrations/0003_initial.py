# Generated by Django 5.0 on 2025-03-20 00:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("trading", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="backtestrun",
            name="user",
            field=models.ForeignKey(
                help_text="User who created this backtest",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="backtests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="backtestresult",
            name="backtest",
            field=models.OneToOneField(
                help_text="Backtest this result belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="result",
                to="trading.backtestrun",
            ),
        ),
        migrations.AddField(
            model_name="backtesttrade",
            name="backtest",
            field=models.ForeignKey(
                help_text="Backtest this trade belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="trades",
                to="trading.backtestrun",
            ),
        ),
        migrations.AddIndex(
            model_name="marketregime",
            index=models.Index(
                fields=["start_date", "end_date"], name="trading_mar_start_d_08cadb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="marketregime",
            index=models.Index(
                fields=["regime_type"], name="trading_mar_regime__a2ad73_idx"
            ),
        ),
        migrations.AddField(
            model_name="backtesttrade",
            name="regime",
            field=models.ForeignKey(
                blank=True,
                help_text="Market regime during this trade",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="trades",
                to="trading.marketregime",
            ),
        ),
        migrations.AddField(
            model_name="backtestrun",
            name="regimes",
            field=models.ManyToManyField(
                blank=True,
                help_text="Market regimes detected during this backtest",
                related_name="backtests",
                to="trading.marketregime",
            ),
        ),
        migrations.AddField(
            model_name="regimetransition",
            name="from_regime",
            field=models.ForeignKey(
                help_text="Source regime",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transitions_from",
                to="trading.marketregime",
            ),
        ),
        migrations.AddField(
            model_name="regimetransition",
            name="to_regime",
            field=models.ForeignKey(
                help_text="Target regime",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transitions_to",
                to="trading.marketregime",
            ),
        ),
        migrations.AddField(
            model_name="signal",
            name="regime",
            field=models.ForeignKey(
                blank=True,
                help_text="Market regime when signal was generated",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="trading.marketregime",
            ),
        ),
        migrations.AddField(
            model_name="backtesttrade",
            name="entry_signal",
            field=models.ForeignKey(
                blank=True,
                help_text="Signal that triggered entry",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="entry_trades",
                to="trading.signal",
            ),
        ),
        migrations.AddField(
            model_name="backtesttrade",
            name="exit_signal",
            field=models.ForeignKey(
                blank=True,
                help_text="Signal that triggered exit",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="exit_trades",
                to="trading.signal",
            ),
        ),
        migrations.AddIndex(
            model_name="symbol",
            index=models.Index(fields=["ticker"], name="trading_sym_ticker_15337a_idx"),
        ),
        migrations.AddIndex(
            model_name="symbol",
            index=models.Index(fields=["sector"], name="trading_sym_sector_481ef8_idx"),
        ),
        migrations.AddIndex(
            model_name="symbol",
            index=models.Index(
                fields=["is_active"], name="trading_sym_is_acti_8b3e1f_idx"
            ),
        ),
        migrations.AddField(
            model_name="price",
            name="symbol",
            field=models.ForeignKey(
                help_text="Symbol this price data belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prices",
                to="trading.symbol",
            ),
        ),
        migrations.AddField(
            model_name="aggregatedprice",
            name="symbol",
            field=models.ForeignKey(
                help_text="Symbol this aggregated data belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aggregated_prices",
                to="trading.symbol",
            ),
        ),
        migrations.AddField(
            model_name="tradingpair",
            name="symbol_1",
            field=models.ForeignKey(
                help_text="First symbol in the pair",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pairs_as_first",
                to="trading.symbol",
            ),
        ),
        migrations.AddField(
            model_name="tradingpair",
            name="symbol_2",
            field=models.ForeignKey(
                help_text="Second symbol in the pair",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pairs_as_second",
                to="trading.symbol",
            ),
        ),
        migrations.AddField(
            model_name="signal",
            name="pair",
            field=models.ForeignKey(
                help_text="Trading pair this signal is for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="signals",
                to="trading.tradingpair",
            ),
        ),
        migrations.AddField(
            model_name="pairspread",
            name="pair",
            field=models.ForeignKey(
                help_text="Trading pair this spread belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="spreads",
                to="trading.tradingpair",
            ),
        ),
        migrations.AddField(
            model_name="backtesttrade",
            name="pair",
            field=models.ForeignKey(
                help_text="Trading pair for this trade",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="backtest_trades",
                to="trading.tradingpair",
            ),
        ),
        migrations.AddField(
            model_name="backtestrun",
            name="pairs",
            field=models.ManyToManyField(
                help_text="Trading pairs included in this backtest",
                related_name="backtests",
                to="trading.tradingpair",
            ),
        ),
        migrations.AddField(
            model_name="walkforwardtest",
            name="pairs",
            field=models.ManyToManyField(
                help_text="Trading pairs included in this test",
                related_name="walk_forward_tests",
                to="trading.tradingpair",
            ),
        ),
        migrations.AddField(
            model_name="walkforwardtest",
            name="user",
            field=models.ForeignKey(
                help_text="User who created this test",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="walk_forward_tests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="walkforwardwindow",
            name="walk_forward_test",
            field=models.ForeignKey(
                help_text="Walk-forward test this window belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="windows",
                to="trading.walkforwardtest",
            ),
        ),
        migrations.AddIndex(
            model_name="regimetransition",
            index=models.Index(
                fields=["transition_date"], name="trading_reg_transit_12664d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="regimetransition",
            index=models.Index(
                fields=["from_regime", "to_regime"],
                name="trading_reg_from_re_173751_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="price",
            index=models.Index(
                fields=["symbol", "timestamp"], name="trading_pri_symbol__b84a55_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="price",
            index=models.Index(fields=["source"], name="trading_pri_source_dfd78d_idx"),
        ),
        migrations.AddIndex(
            model_name="price",
            index=models.Index(
                fields=["timeframe"], name="trading_pri_timefra_c77048_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="price",
            constraint=models.UniqueConstraint(
                fields=("symbol", "timestamp", "source", "timeframe"),
                name="unique_price_point",
            ),
        ),
        migrations.AddIndex(
            model_name="aggregatedprice",
            index=models.Index(
                fields=["symbol", "time_bucket"], name="trading_agg_symbol__e7677f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aggregatedprice",
            index=models.Index(
                fields=["timeframe"], name="trading_agg_timefra_d67a81_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="aggregatedprice",
            constraint=models.UniqueConstraint(
                fields=("symbol", "time_bucket", "timeframe"),
                name="unique_aggregated_price",
            ),
        ),
        migrations.AddIndex(
            model_name="tradingpair",
            index=models.Index(
                fields=["symbol_1", "symbol_2"], name="trading_tra_symbol__02fb69_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tradingpair",
            index=models.Index(
                fields=["cointegration_pvalue"], name="trading_tra_cointeg_86a59f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tradingpair",
            index=models.Index(
                fields=["is_active"], name="trading_tra_is_acti_84cc5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tradingpair",
            index=models.Index(
                fields=["stability_score"], name="trading_tra_stabili_c17648_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="tradingpair",
            constraint=models.UniqueConstraint(
                fields=("symbol_1", "symbol_2"), name="unique_trading_pair"
            ),
        ),
        migrations.AddIndex(
            model_name="signal",
            index=models.Index(
                fields=["pair", "timestamp"], name="trading_sig_pair_id_c45496_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="signal",
            index=models.Index(
                fields=["signal_type"], name="trading_sig_signal__92490b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="signal",
            index=models.Index(
                fields=["processed"], name="trading_sig_process_124451_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="signal",
            index=models.Index(
                fields=["regime"], name="trading_sig_regime__0a2f49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pairspread",
            index=models.Index(
                fields=["pair", "timestamp"], name="trading_pai_pair_id_d13516_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pairspread",
            index=models.Index(
                fields=["z_score"], name="trading_pai_z_score_e66243_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="pairspread",
            constraint=models.UniqueConstraint(
                fields=("pair", "timestamp"), name="unique_pair_spread"
            ),
        ),
        migrations.AddIndex(
            model_name="backtesttrade",
            index=models.Index(
                fields=["backtest", "pair"], name="trading_bac_backtes_a98969_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="backtesttrade",
            index=models.Index(
                fields=["entry_date"], name="trading_bac_entry_d_dd79a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="backtesttrade",
            index=models.Index(
                fields=["trade_type"], name="trading_bac_trade_t_b8774f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="backtesttrade",
            index=models.Index(
                fields=["exit_reason"], name="trading_bac_exit_re_b0072c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="backtestrun",
            index=models.Index(
                fields=["user", "created_at"], name="trading_bac_user_id_5cba87_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="backtestrun",
            index=models.Index(fields=["status"], name="trading_bac_status_627082_idx"),
        ),
        migrations.AddIndex(
            model_name="walkforwardtest",
            index=models.Index(
                fields=["user", "created_at"], name="trading_wal_user_id_8d4018_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="walkforwardtest",
            index=models.Index(fields=["status"], name="trading_wal_status_b6535f_idx"),
        ),
        migrations.AddIndex(
            model_name="walkforwardwindow",
            index=models.Index(
                fields=["walk_forward_test", "out_of_sample_start"],
                name="trading_wal_walk_fo_4b77f8_idx",
            ),
        ),
    ]
